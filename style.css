/* font-family: 'Roboto', sans-serif;  */

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  font-family: "Roboto", sans-serif;
  font-size: 10px;
  background-color: #444;
}
.wrapper {
  max-width: 1200px;
  margin: 0 auto;
}

h1 {
  margin-top: 10px;
  color: #fff;
  font-size: 3rem;
  text-align: center;
  font-weight: normal;
}

p {
  color: #fff;
  font-size: 2rem;
  text-align: center;
  font-style: italic;
}

.gallery {
  height: 90vh;
  width: 100%;
  padding-top: 10px;
  padding-bottom: 70px;
  display: flex;
  flex-wrap: wrap;
  align-content: space-around;
  justify-content: space-around;
  /* border: 2px solid yellowgreen; */
}

.container {
  position: relative;
  width: 21%;
  height: 30%;
  border: 1px solid black;
  overflow: hidden;
  transition: 1s;
  perspective: 50em;
}

.container img {
  position: absolute;
  top: 0;
  left: -20%;
  /* transform: translate(-50%, -50%); */
  height: 100%;
  transition: 1s;
}

.text {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 2.5rem;
  text-transform: uppercase;
  letter-spacing: 3px;
  font-weight: bold;
  text-shadow: 0px 0px 5px #fff, 0px 0px 5px #fff, 0px 0px 5px #fff,
    0px 0px 5px #fff;
  text-align: center;
  opacity: 1;
  transition: 0.5s 1s;
}

.overlay {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  opacity: 0;
  transition: 1s;
}

.overlay-text {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 2rem;
  text-transform: uppercase;
  letter-spacing: 2px;
  font-weight: bold;
  text-align: center;
  /* text-shadow: 2px 2px 5px #fff; */
}

/* FILTER */
.img-blur {
  filter: blur(0);
}
.blur:hover .img-blur {
  filter: blur(5px);
}
.shadow {
  filter: drop-shadow(0);
}
.shadow:hover {
  filter: drop-shadow(8px 8px 10px red);
}

.saturate {
  filter: saturate(0);
}
.saturate:hover {
  filter: saturate(2);
}

.img-contrast {
  filter: contrast(0);
}
.contrast:hover .img-contrast {
  filter: contrast(2);
}

.hue-rotate {
  filter: hue-rotate(0);
  transition: 3s;
}
.hue-rotate:hover {
  filter: hue-rotate(360deg);
}

/* TRANSFORM */
.rotate {
  transform: scale(1) rotate(0);
  z-index: 1;
}

.rotate:hover {
  transform: scale(2) rotate(360deg);
}

.img-scale {
  transform: scale(7);
}
.new {
  opacity: 0;
  transition-delay: 1s;
}

.scale:hover .img-scale {
  transform: scale(1);
}
.scale:hover .text {
  opacity: 0;
}
.scale:hover .new {
  opacity: 1;
}

/* OVERLAY */
.show {
  perspective: 50em;
}
.img-show {
  transform: rotateX(0);
  transform-origin: 50% 100%;
}
.show:hover .img-show {
  transform: rotateX(90deg);
  opacity: 0;
}

.overlay-show {
  transform: rotateX(-90deg);
  transform-origin: 50% -50%;
  z-index: 1;
  background-color: #111;
  color: white;
}
.show:hover .overlay-show {
  transform: rotateX(0);
  opacity: 1;
}

.overlay-white {
  background-color: #fff;
}
.overlay-white:hover {
  opacity: 1;
}

.overlay-dark {
  background-color: #000;
}
.overlay-dark:hover {
  opacity: 0.5;
}

/* ANIMATION */
.shake {
  animation: none;
}
.shake:hover {
  animation: shaker 1s ease;
}

@keyframes shaker {
  0% {
    transform: rotate(0);
  }
  30% {
    transform: rotate(10deg);
  }
  35% {
    transform: rotate(-10deg);
  }
  40% {
    transform: rotate(10deg);
  }
  45% {
    transform: rotate(-10deg);
  }
  50% {
    transform: rotate(10deg);
  }
  55% {
    transform: rotate(-10deg);
  }
  60% {
    transform: rotate(10deg);
  }
  65% {
    transform: rotate(-10deg);
  }
  70% {
    transform: rotate(10deg);
  }
  100% {
    transform: rotate(0);
  }
}

.move {
  animation: none;
  z-index: 2;
}
.move:hover {
  animation: move 5s ease;
}

@keyframes move {
  0% {
    transform: scale(1) translate(0, 0);
  }

  10% {
    transform: scale(1.3) translate(0, 0);
  }

  30% {
    transform: scale(1.3) translate(0, -150%) rotate(-10deg);
  }

  50% {
    transform: scale(1.3) translate(-250%, -150%) rotate(10deg);
  }

  70% {
    transform: scale(1.3) translate(-250%, 0) rotate(20deg);
  }

  90% {
    transform: scale(1.3) translate(0, 0);
  }

  100% {
    transform: scale(1) translate(0, 0);
  }
}

*:hover {
  cursor: pointer;
}
