@import "variables";
@import "mixins";

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  &:hover {
    cursor: pointer;
  }
}

html {
  font-family: "Roboto", sans-serif;
  font-size: 10px;
  background-color: #444;
}

.wrapper {
  max-width: 1200px;
  margin: 0 auto;
  h1 {
    margin-top: 10px;
    color: $color-title;
    font-size: 3rem;
    text-align: center;
    font-weight: normal;
  }
  p {
    color: $color-title;
    font-size: 2rem;
    text-align: center;
    font-style: italic;
  }
}

.gallery {
  height: 90vh;
  width: 100%;
  padding-top: 10px;
  padding-bottom: 70px;
  display: flex;
  flex-wrap: wrap;
  align-content: space-around;
  justify-content: space-around;
}

.container {
  position: relative;
  width: 21%;
  height: 30%;
  border: 1px solid black;
  overflow: hidden;
  transition: $transition-time;
  perspective: 50em;

  img {
    position: absolute;
    top: 0;
    left: -10%;
    height: 100%;
    transition: $transition-time;
  }
  .text {
    @include block-center();
    @include text-style();
    font-size: 2.5rem;
    letter-spacing: 3px;
    text-shadow: 0px 0px 5px $color-text-shadow, 0px 0px 5px $color-text-shadow,
      0px 0px 5px $color-text-shadow, 0px 0px 5px $color-text-shadow;
    opacity: 1;
    transition: 0.5s 1s;
  }
  .overlay {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    opacity: 0;
    transition: $transition-time;

    .overlay-text {
      @include block-center();
      @include text-style();
      font-size: 2rem;
      letter-spacing: 2px;
    }
  }
}

/* FILTER */
.img-blur {
  filter: blur(0);
  .blur:hover & {
    filter: blur(5px);
  }
}

.shadow {
  filter: drop-shadow(0);
  &:hover {
    filter: drop-shadow(8px 8px 10px red);
  }
}

.saturate {
  filter: saturate(0);
  &:hover {
    filter: saturate(2);
  }
}

.contrast .img-contrast {
  filter: contrast(0);
  transition: $transition-time + 1;
}
.contrast:hover .img-contrast {
  filter: contrast(2);
}

.hue-rotate {
  filter: hue-rotate(0);
  transition: $transition-time + 2;
  &:hover {
    filter: hue-rotate(360deg);
  }
}

/* TRANSFORM */
.rotate {
  transform: scale(1) rotate(0);
  z-index: 1;
  &:hover {
    transform: scale(2) rotate(360deg);
  }
}

.img-scale {
  transform: scale(7);
  .scale:hover & {
    transform: scale(1);
  }
}

.scale:hover .text {
  opacity: 0;
}

.scale .new {
  opacity: 0;
  transition-delay: 1s;
}

.scale:hover .new {
  opacity: 1;
}

/* OVERLAY */
.show {
  perspective: 50em;
}

.img-show {
  transform: rotateX(0);
  transform-origin: 50% 100%;
  .show:hover & {
    transform: rotateX(90deg);
    opacity: 0;
  }
}

.overlay-show {
  transform: rotateX(-90deg);
  transform-origin: 50% -50%;
  z-index: 1;
  background-color: #111;
  color: $color-title;
  .show:hover & {
    transform: rotateX(0);
    opacity: 1;
  }
}

.overlay-white {
  background-color: #fff;
  &:hover {
    opacity: 1;
  }
}

.overlay-dark {
  background-color: #000;
  &:hover {
    opacity: 0.5;
  }
}

/* ANIMATION */
.shake {
  animation: none;
  &:hover {
    animation: shake 1s ease;
  }
}

@keyframes shake {
  0% {
    @include rotate(0);
  }
  30% {
    @include rotate($number);
  }
  35% {
    @include rotate(-$number);
  }
  40% {
    @include rotate($number);
  }
  45% {
    @include rotate(-$number);
  }
  50% {
    @include rotate($number);
  }
  55% {
    @include rotate(-$number);
  }
  60% {
    @include rotate($number);
  }
  65% {
    @include rotate(-$number);
  }
  70% {
    @include rotate($number);
  }
  100% {
    @include rotate(0);
  }
}

.move {
  animation: none;
  z-index: 2;
  &:hover {
    animation: move 5s ease;
  }
}

@keyframes move {
  0% {
    @include scale-translate-rotate(1, 0, 0, 0);
  }

  10% {
    @include scale-translate-rotate(1.3, 0, 0, 0);
  }

  30% {
    @include scale-translate-rotate(1.3, 0, -150%, -$number);
  }

  50% {
    @include scale-translate-rotate(1.3, -250%, -150%, $number);
  }

  70% {
    @include scale-translate-rotate(1.3, -250%, 0, $number + 10);
  }

  90% {
    @include scale-translate-rotate(1.3, 0, 0, 0);
  }

  100% {
    @include scale-translate-rotate(1, 0, 0, 0);
  }
}
